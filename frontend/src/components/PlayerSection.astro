---
// Player section.astro
const { sectionName = 'Welcome, world!' } = Astro.props;
---

<div>
  <h2>{sectionName}</h2>
  <div class="options">
    <div class="column">
      <button id="winnerButtonPlayer">Winner (Forehand)</button>
      <button id="errorButtonPlayer">Error (Forehand)</button>
    </div>
    <div class="column">
      <button id="winnerButtonOpponent">Winner (Forehand)</button>
      <button id="errorButtonOpponent">Error (Forehand)</button>
    </div>
  </div>
</div>

<script>
  const url = 'http://localhost:3091/api/points';
  // Function to handle points
  async function handlePoint(player, pointResolution, pointPlayedFromCourtPosition, ballPlayedToPosition) {
    console.log(`Point recorded for ${player}: ${pointResolution}: ${pointPlayedFromCourtPosition}: ${ballPlayedToPosition}`);
    
    // Create a new point by sending a POST request to your backend API
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        pointScore: 'Your Point Score', // Provide the actual point score
        wonByPlayer: player,
        pointResolution,
        pointPlayedFromCourtPosition,
        ballPlayedToPosition,
        game: 'Your Game ID', // Provide the actual game ID
      }),
    });

    if (response.ok) {
      console.log('Point created successfully');
    } else {
      console.error('Error creating point');
    }
  }

  const winnerButtonPlayer = document.getElementById("winnerButtonPlayer");
  const errorButtonPlayer = document.getElementById("errorButtonPlayer");
  const winnerButtonOpponent = document.getElementById("winnerButtonOpponent");
  const errorButtonOpponent = document.getElementById("errorButtonOpponent");

  winnerButtonPlayer.addEventListener("click", () => handlePoint("Player", "Winner", "Net", "Left baseline"));
  errorButtonPlayer.addEventListener("click", () => handlePoint("Player", "Error", "Forehand", "Net"));
  winnerButtonOpponent.addEventListener("click", () => handlePoint("Opponent", "Winner", "Baseline", "Net"));
  errorButtonOpponent.addEventListener("click", () => handlePoint("Opponent", "Error", "Backhand", "Baseline"));
</script>
